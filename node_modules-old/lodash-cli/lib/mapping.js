'use strict';

/** Load other modules. */
var _ = require('lodash-compat'),
    util = require('./util.js');

/** Module references. */
var createMap = util.createMap;

/*----------------------------------------------------------------------------*/

module.exports = {

  /** Used to track the category of aliases. */
  'aliasCategory': createMap({
    'Collection': [
      'max',
      'min',
      'sum'
    ]
  }),

  /** Used to map aliases to their real names. */
  'aliasToReal': createMap({
    'all': 'every',
    'any': 'some',
    'backflow': 'flowRight',
    'collect': 'map',
    'compose': 'flowRight',
    'commit': 'wrapperCommit',
    'contains': 'includes',
    'detect': 'find',
    'each': 'forEach',
    'eachRight': 'forEachRight',
    'extend': 'assign',
    'foldl': 'reduce',
    'foldr': 'reduceRight',
    'head': 'first',
    'include': 'includes',
    'inject': 'reduce',
    'iteratee': 'callback',
    'methods': 'functions',
    'object': 'zipObject',
    'plant': 'wrapperPlant',
    'reverse': 'wrapperReverse',
    'run': 'wrapperValue',
    'select': 'filter',
    'tail': 'rest',
    'toJSON': 'wrapperValue',
    'toString': 'wrapperToString',
    'unique': 'uniq',
    'valueOf': 'wrapperValue',
    'value': 'wrapperValue'
  }),

  /** Used to track the category of identifiers. */
  'category': createMap({
    'Array': [
      'chunk',
      'compact',
      'difference',
      'drop',
      'dropRight',
      'dropRightWhile',
      'dropWhile',
      'fill',
      'findIndex',
      'findLastIndex',
      'first',
      'flatten',
      'flattenDeep',
      'indexOf',
      'initial',
      'intersection',
      'last',
      'lastIndexOf',
      'pull',
      'pullAt',
      'remove',
      'rest',
      'slice',
      'sortedIndex',
      'sortedLastIndex',
      'take',
      'takeRight',
      'takeRightWhile',
      'takeWhile',
      'union',
      'uniq',
      'unzip',
      'unzipWith',
      'without',
      'xor',
      'zip',
      'zipObject',
      'zipWith'
    ],
    'Chain': [
      'chain',
      'lodash',
      'tap',
      'thru',
      'wrapperChain',
      'wrapperCommit',
      'wrapperPlant',
      'wrapperReverse',
      'wrapperToString',
      'wrapperValue'
    ],
    'Collection': [
      'at',
      'countBy',
      'every',
      'filter',
      'find',
      'findLast',
      'findWhere',
      'forEach',
      'forEachRight',
      'groupBy',
      'includes',
      'indexBy',
      'invoke',
      'map',
      'partition',
      'pluck',
      'reduce',
      'reduceRight',
      'reject',
      'sample',
      'shuffle',
      'size',
      'some',
      'sortBy',
      'sortByAll',
      'sortByOrder',
      'where'
    ],
    'Date': [
      'now'
    ],
    'Function': [
      'after',
      'ary',
      'before',
      'bind',
      'bindAll',
      'bindKey',
      'curry',
      'curryRight',
      'debounce',
      'defer',
      'delay',
      'flow',
      'flowRight',
      'memoize',
      'negate',
      'once',
      'partial',
      'partialRight',
      'rearg',
      'restParam',
      'spread',
      'throttle',
      'wrap'
    ],
    'Lang': [
      'clone',
      'cloneDeep',
      'isArguments',
      'isArray',
      'isBoolean',
      'isDate',
      'isElement',
      'isEmpty',
      'isEqual',
      'isError',
      'isFinite',
      'isFunction',
      'isMatch',
      'isNaN',
      'isNative',
      'isNull',
      'isNumber',
      'isObject',
      'isPlainObject',
      'isRegExp',
      'isString',
      'isTypedArray',
      'isUndefined',
      'toArray',
      'toPlainObject'
    ],
    'Math': [
      'add',
      'max',
      'min',
      'sum'
    ],
    'Number': [
      'random',
      'inRange'
    ],
    'Object': [
      'assign',
      'create',
      'defaults',
      'findKey',
      'findLastKey',
      'forIn',
      'forInRight',
      'forOwn',
      'forOwnRight',
      'functions',
      'get',
      'has',
      'invert',
      'keys',
      'keysIn',
      'mapKeys',
      'mapValues',
      'merge',
      'omit',
      'pairs',
      'pick',
      'result',
      'set',
      'transform',
      'values',
      'valuesIn'
    ],
    'String': [
      'camelCase',
      'capitalize',
      'deburr',
      'endsWith',
      'escape',
      'escapeRegExp',
      'kebabCase',
      'pad',
      'padLeft',
      'padRight',
      'parseInt',
      'repeat',
      'snakeCase',
      'startCase',
      'startsWith',
      'template',
      'templateSettings',
      'trim',
      'trimLeft',
      'trimRight',
      'trunc',
      'unescape',
      'words'
    ],
    'Utility': [
      'attempt',
      'callback',
      'constant',
      'identity',
      'matches',
      'matchesProperty',
      'method',
      'methodOf',
      'mixin',
      'noConflict',
      'noop',
      'property',
      'propertyOf',
      'range',
      'runInContext',
      'times',
      'uniqueId'
    ]
  }),

  /* Used to map categories to their dependency name. */
  'categoryToDepName': createMap({
    'Array': 'array',
    'Chain': 'chain',
    'Collection': 'collection',
    'Date': 'date',
    'Function': 'func',
    'Lang': 'lang',
    'Math': 'math',
    'Number': 'number',
    'Object': 'object',
    'String': 'string',
    'Utility': 'utility'
  }),

  /* Used to force referencing identifers by their alias. */
  'forceAlias': createMap({
    'wrapperCommit': 'commit',
    'wrapperPlant': 'plant',
    'wrapperReverse': 'reverse',
    'wrapperToString': 'toString',
    'wrapperValue': 'value'
  }),

  /* Used to force inlining of uninlinables per identifier. */
  'forceInline': createMap({
    'baseEach': ['baseFor'],
    'baseCallback': ['baseGet', 'baseIsMatch', 'baseMatches', 'baseMatchesProperty', 'baseSlice', 'baseToString', 'toPath'],
    'isArray': ['baseToString', 'isNative'],
    'isFunction': ['baseIsFunction', 'baseToString', 'isNative'],
    'isNative': ['baseToString'],
    'keys': ['keysIn'],
    'template': ['attempt', 'baseAssign', 'isError'],
    'templateSettings': ['reEscape', 'reEvaluate']
  }),

  /** Used to track function dependencies. */
  'funcDep': createMap({

    // Dependencies of variables.
    'metaMap': ['isNative'],

    // Dependencies of lodash properties.
    'templateSettings': ['escape'],

    // Dependencies of the main module.
    'main': ['arrayEach', 'baseForOwn', 'baseMatches', 'createHybridWrapper', 'getCallback', 'identity', 'isArray', 'last', 'lazyClone', 'lazyReverse', 'lazyValue', 'LazyWrapper', 'lodash', 'LodashWrapper', 'mixin', 'property', 'thru'],

    // Dependencies of lodash methods.
    'add': [],
    'after': [],
    'ary': ['createWrapper', 'isIterateeCall'],
    'assign': ['assignWith', 'baseAssign', 'createAssigner'],
    'at': ['baseAt', 'baseFlatten', 'isArrayLike', 'restParam', 'toIterable'],
    'attempt': ['isError', 'restParam'],
    'before': [],
    'bind': ['createWrapper', 'lodash', 'restParam', 'replaceHolders'],
    'bindAll': ['baseFlatten', 'createWrapper', 'functions', 'restParam'],
    'bindKey': [ 'createWrapper', 'lodash', 'restParam', 'replaceHolders'],
    'callback': ['baseCallback', 'isIterateeCall', 'isObjectLike', 'matches'],
    'camelCase': ['createCompounder'],
    'capitalize': ['baseToString'],
    'chain': ['lodash'],
    'chunk': ['baseSlice', 'isIterateeCall'],
    'clone': ['baseClone', 'bindCallback', 'isIterateeCall'],
    'cloneDeep': ['baseClone', 'bindCallback'],
    'compact': [],
    'constant': [],
    'countBy': ['createAggregator'],
    'create': ['baseAssign', 'baseCreate', 'isIterateeCall'],
    'curry': ['createCurry'],
    'curryRight': ['createCurry'],
    'debounce': ['isObject', 'now'],
    'deburr': ['baseToString', 'deburrLetter'],
    'defaults': ['assign', 'assignDefaults', 'restParam'],
    'defer': ['baseDelay', 'restParam'],
    'delay': ['baseDelay', 'restParam'],
    'difference': ['baseDifference', 'baseFlatten', 'isArrayLike', 'restParam'],
    'drop': ['baseSlice', 'isIterateeCall'],
    'dropRight': ['baseSlice', 'isIterateeCall'],
    'dropRightWhile': ['baseWhile', 'getCallback'],
    'dropWhile': ['baseWhile', 'getCallback'],
    'endsWith': ['baseToString'],
    'escape': ['baseToString', 'escapeHtmlChar'],
    'escapeRegExp': ['baseToString'],
    'every': ['arrayEvery', 'baseEvery', 'getCallback', 'isArray', 'isIterateeCall'],
    'fill': ['baseFill', 'isIterateeCall'],
    'filter': ['arrayFilter', 'baseFilter', 'getCallback', 'isArray'],
    'find': ['baseEach','createFind'],
    'findIndex': ['createFindIndex'],
    'findLastIndex': ['createFindIndex'],
    'findKey': ['baseForOwn', 'createFindKey'],
    'findLast': ['baseEachRight', 'createFind'],
    'findLastKey': ['baseForOwnRight', 'createFindKey'],
    'findWhere': ['baseMatches', 'find'],
    'first': [],
    'flatten': ['baseFlatten', 'isIterateeCall'],
    'flattenDeep': ['baseFlatten'],
    'flow': ['createFlow'],
    'flowRight': ['createFlow'],
    'forEach': ['arrayEach', 'baseEach', 'createForEach'],
    'forEachRight': ['arrayEachRight', 'baseEachRight', 'createForEach'],
    'forIn': ['baseFor', 'createForIn'],
    'forInRight': ['baseForRight', 'createForIn'],
    'forOwn': ['baseForOwn', 'createForOwn'],
    'forOwnRight': ['baseForOwnRight', 'createForOwn'],
    'functions': ['baseFunctions', 'keysIn'],
    'get': ['baseGet', 'toPath'],
    'groupBy': ['createAggregator'],
    'has': ['baseGet', 'baseSlice', 'isIndex', 'isKey', 'isString', 'last', 'toPath'],
    'identity': [],
    'includes': ['getIndexOf', 'getLength', 'isArray', 'isIterateeCall', 'isLength', 'isString', 'values'],
    'indexBy': ['createAggregator'],
    'indexOf': ['baseIndexOf', 'binaryIndex'],
    'initial': ['dropRight'],
    'inRange': [],
    'intersection': ['cacheIndexOf', 'createCache', 'getIndexOf', 'isArrayLike'],
    'invert': ['isIterateeCall', 'keys'],
    'invoke': ['baseEach', 'invokePath', 'isKey', 'isArrayLike', 'restParam'],
    'isArguments': ['isArrayLike', 'isObjectLike'],
    'isArray': ['isLength', 'isNative', 'isObjectLike'],
    'isBoolean': ['isObjectLike'],
    'isDate': ['isObjectLike'],
    'isElement': ['isHostObject', 'isObjectLike', 'isPlainObject'],
    'isEmpty': ['isArguments', 'isArray', 'isArrayLike', 'isFunction', 'isObjectLike', 'isString', 'keys'],
    'isEqual': ['baseIsEqual', 'bindCallback', 'isStrictComparable'],
    'isError': ['isObjectLike'],
    'isFinite': ['isNative'],
    'isFunction': ['baseIsFunction', 'isNative'],
    'isMatch': ['baseIsMatch', 'bindCallback', 'isStrictComparable', 'keys', 'toObject'],
    'isNaN': ['isNumber'],
    'isNative': ['escapeRegExp', 'isHostObject', 'isObjectLike'],
    'isNull': [],
    'isNumber': ['isObjectLike'],
    'isObject': [],
    'isPlainObject': ['isArguments', 'isNative', 'shimIsPlainObject'],
    'isRegExp': ['isObject'],
    'isString': ['isObjectLike'],
    'isTypedArray': ['isLength', 'isObjectLike'],
    'isUndefined': [],
    'kebabCase': ['createCompounder'],
    'keys': ['isArrayLike', 'isObject', 'isNative', 'shimKeys'],
    'keysIn': ['arrayEach', 'isArguments', 'isArray', 'isFunction', 'isIndex', 'isLength', 'isObject', 'isString'],
    'last': [],
    'lastIndexOf': ['indexOfNaN', 'binaryIndex'],
    'lodash': ['baseLodash', 'isArray', 'isObjectLike', 'LazyWrapper', 'LodashWrapper', 'wrapperClone'],
    'map': ['arrayMap', 'baseMap', 'getCallback', 'isArray'],
    'mapKeys': ['createObjectMapper'],
    'mapValues': ['createObjectMapper'],
    'matches': ['baseClone', 'baseMatches'],
    'matchesProperty': ['baseClone', 'baseMatchesProperty'],
    'method': ['invokePath', 'restParam'],
    'methodOf': ['invokePath', 'restParam'],
    'max': ['arrayMax', 'createExtremum'],
    'memoize': ['MapCache'],
    'merge': ['baseMerge', 'createAssigner'],
    'min': ['arrayMin', 'createExtremum'],
    'mixin': ['arrayCopy', 'baseFunctions', 'isFunction', 'isObject', 'keys', 'lodash'],
    'negate': [],
    'noConflict': [],
    'noop': [],
    'now': ['isNative'],
    'omit': ['arrayMap', 'baseDifference', 'baseFlatten', 'bindCallback', 'keysIn', 'pickByArray', 'pickByCallback', 'restParam'],
    'once': ['before'],
    'pad': ['baseToString', 'createPadding'],
    'padLeft': ['createPadDir'],
    'padRight': ['createPadDir'],
    'pairs': ['keys'],
    'parseInt': ['isIterateeCall', 'trim'],
    'partial': ['createPartial'],
    'partialRight': ['createPartial'],
    'partition': ['createAggregator'],
    'pick': ['baseFlatten', 'bindCallback', 'pickByArray', 'pickByCallback', 'restParam'],
    'pluck': ['map', 'property'],
    'property': ['baseProperty', 'basePropertyDeep', 'isKey'],
    'propertyOf': ['baseGet', 'toPath'],
    'pull': ['getIndexOf'],
    'pullAt': ['baseAt', 'baseCompareAscending', 'baseFlatten', 'basePullAt', 'restParam'],
    'random': ['baseRandom', 'isIterateeCall'],
    'range': ['isIterateeCall'],
    'rearg': ['baseFlatten', 'createWrapper', 'restParam'],
    'reduce': ['arrayReduce', 'baseEach', 'createReduce'],
    'reduceRight': ['arrayReduceRight', 'baseEachRight', 'createReduce'],
    'reject': ['arrayFilter', 'baseFilter', 'getCallback', 'isArray'],
    'remove': ['basePullAt', 'getCallback'],
    'repeat': ['baseToString'],
    'rest': ['drop'],
    'restParam': [],
    'result': ['baseGet', 'baseSlice', 'isFunction', 'isKey', 'last', 'toObject', 'toPath'],
    'runInContext': ['defaults', 'pick'],
    'sample': ['baseRandom', 'isIterateeCall', 'shuffle', 'toIterable'],
    'set': ['isIndex', 'isKey', 'isObject', 'toPath'],
    'shuffle': ['baseRandom', 'toIterable'],
    'size': ['getLength', 'isLength', 'keys'],
    'slice': ['baseSlice', 'isIterateeCall'],
    'snakeCase': ['createCompounder'],
    'some': ['arraySome', 'baseSome', 'getCallback', 'isArray', 'isIterateeCall'],
    'sortBy': ['baseMap', 'baseSortBy', 'compareAscending', 'getCallback', 'isIterateeCall'],
    'sortByAll': ['baseFlatten', 'baseSortByOrder', 'isIterateeCall', 'restParam'],
    'sortByOrder': ['baseSortByOrder', 'isArray', 'isIterateeCall'],
    'sortedIndex': ['createSortedIndex'],
    'sortedLastIndex': ['createSortedIndex'],
    'spread': [],
    'startCase': ['createCompounder'],
    'startsWith': ['baseToString'],
    'sum': ['baseSum', 'arraySum', 'isArray', 'isIterateeCall', 'getCallback', 'toIterable'],
    'take': ['baseSlice', 'isIterateeCall'],
    'takeRight': ['baseSlice', 'isIterateeCall'],
    'takeRightWhile': ['baseWhile', 'getCallback'],
    'takeWhile': ['baseWhile', 'getCallback'],
    'tap': [],
    'template': ['assignOwnDefaults', 'assignWith', 'attempt', 'baseAssign', 'baseToString', 'baseValues', 'escapeStringChar', 'isError', 'isIterateeCall', 'keys'],
    'throttle': ['debounce', 'isObject'],
    'thru': [],
    'times': ['bindCallback'],
    'toArray': ['arrayCopy', 'getLength', 'isLength', 'isString', 'values'],
    'toPlainObject': ['baseCopy', 'keysIn'],
    'transform': ['arrayEach', 'baseCreate', 'baseForOwn', 'getCallback', 'isArray', 'isFunction', 'isObject', 'isTypedArray'],
    'trim': ['baseToString', 'charsLeftIndex', 'charsRightIndex', 'isIterateeCall', 'trimmedLeftIndex', 'trimmedRightIndex'],
    'trimLeft': ['baseToString', 'charsLeftIndex', 'isIterateeCall', 'trimmedLeftIndex'],
    'trimRight': ['baseToString', 'charsRightIndex', 'isIterateeCall', 'trimmedRightIndex'],
    'trunc': ['baseToString', 'isIterateeCall', 'isObject', 'isRegExp'],
    'unescape': ['baseToString', 'unescapeHtmlChar'],
    'union': ['baseFlatten', 'baseUniq', 'restParam'],
    'uniq': ['baseCallback', 'baseUniq', 'getCallback', 'getIndexOf', 'isIterateeCall', 'sortedUniq'],
    'uniqueId': ['baseToString'],
    'unzip': ['arrayMap', 'arrayFilter', 'baseProperty', 'isArrayLike'],
    'unzipWith': ['arrayMap', 'arrayReduce', 'bindCallback', 'unzip'],
    'values': ['baseValues', 'keys'],
    'valuesIn': ['baseValues', 'keysIn'],
    'where': ['baseMatches', 'filter'],
    'without': ['baseDifference', 'isArrayLike', 'restParam'],
    'words': ['baseToString', 'isIterateeCall'],
    'wrap': ['createWrapper', 'identity'],
    'xor': ['baseDifference', 'baseUniq', 'isArrayLike'],
    'zip': ['restParam', 'unzip'],
    'zipObject': ['isArray'],
    'zipWith': ['restParam', 'unzipWith'],

    // Dependencies of Lazy wrapper functions.
    'LazyWrapper': ['baseCreate', 'baseLodash'],
    'lazyClone': ['arrayCopy', 'LazyWrapper'],
    'lazyReverse': ['LazyWrapper'],
    'lazyValue': ['baseWrapperValue', 'getView', 'isArray'],

    // Dependencies of lodash wrapper functions.
    'LodashWrapper': ['baseCreate', 'baseLodash'],
    'wrapperChain': ['chain'],
    'wrapperClone': ['arrayCopy', 'LazyWrapper', 'LodashWrapper'],
    'wrapperCommit': ['LodashWrapper'],
    'wrapperPlant': ['baseLodash', 'wrapperClone'],
    'wrapperReverse': ['LazyWrapper', 'LodashWrapper', 'thru'],
    'wrapperToString': [],
    'wrapperValue': ['baseWrapperValue'],

    // Dependencies of `Map` cache functions.
    'MapCache': ['mapDelete', 'mapGet', 'mapHas', 'mapSet'],
    'mapDelete': [],
    'mapGet': [],
    'mapHas': [],
    'mapSet': [],

    // Dependencies of `Set` cache functions.
    'SetCache': ['cachePush', 'isNative'],
    'cacheIndexOf': ['isObject'],
    'cachePush': ['isObject'],
    'createCache': ['constant', 'isNative', 'SetCache'],

    // Dependencies of private functions.
    'arrayCopy': [],
    'arrayEach': [],
    'arrayEachRight': [],
    'arrayEvery': [],
    'arrayFilter': [],
    'arrayMap': [],
    'arrayMax': [],
    'arrayMin': [],
    'arrayReduce': [],
    'arrayReduceRight': [],
    'arraySome': [],
    'arraySum': [],
    'assignDefaults': [],
    'assignOwnDefaults': [],
    'assignWith': ['getSymbols', 'keys'],
    'baseAssign': ['baseCopy', 'getSymbols', 'isNative', 'keys'],
    'baseAt': ['isIndex', 'isArrayLike'],
    'baseCallback': ['baseMatches', 'baseMatchesProperty', 'bindCallback', 'identity', 'property'],
    'baseClone': ['arrayCopy', 'arrayEach', 'baseAssign', 'baseForOwn', 'initCloneArray', 'initCloneByTag', 'initCloneObject', 'isArray', 'isHostObject', 'isObject'],
    'baseCompareAscending': [],
    'baseCopy': [],
    'baseCreate': ['isObject'],
    'baseDelay': [],
    'baseDifference': ['cacheIndexOf', 'createCache', 'getIndexOf'],
    'baseEach': ['baseForOwn', 'createBaseEach'],
    'baseEachRight': ['baseForOwnRight', 'createBaseEach'],
    'baseEvery': ['baseEach'],
    'baseFill': [],
    'baseFilter': ['baseEach'],
    'baseFind': [],
    'baseFindIndex': [],
    'baseFlatten': ['isArguments', 'isArray', 'isArrayLike', 'isObjectLike'],
    'baseFor': ['createBaseFor'],
    'baseForIn': ['baseFor', 'keysIn'],
    'baseForOwn': ['baseFor', 'keys'],
    'baseForOwnRight': ['baseForRight', 'keys'],
    'baseForRight': ['createBaseFor'],
    'baseFunctions': ['isFunction'],
    'baseGet': ['toObject'],
    'baseIndexOf': ['indexOfNaN'],
    'baseIsEqual': ['baseIsEqualDeep'],
    'baseIsEqualDeep': ['equalArrays', 'equalByTag', 'equalObjects', 'isArray', 'isHostObject', 'isTypedArray'],
    'baseIsFunction': [],
    'baseIsMatch': ['baseIsEqual'],
    'baseLodash': [],
    'baseMap': ['baseEach', 'isArrayLike'],
    'baseMatches': ['baseIsMatch', 'constant', 'isStrictComparable', 'keys', 'toObject'],
    'baseMatchesProperty': ['baseGet', 'baseIsEqual', 'baseSlice', 'isArray', 'isKey', 'isStrictComparable', 'last', 'toObject', 'toPath'],
    'baseMerge': ['arrayEach', 'baseMergeDeep', 'getSymbols', 'isArray', 'isArrayLike', 'isObject', 'isObjectLike', 'isTypedArray', 'keys'],
    'baseMergeDeep': ['arrayCopy', 'isArguments', 'isArray', 'isArrayLike', 'isPlainObject', 'isTypedArray', 'toPlainObject'],
    'baseProperty': ['toObject'],
    'basePropertyDeep': ['baseGet', 'toPath'],
    'basePullAt': ['isIndex'],
    'baseRandom': [],
    'baseReduce': [],
    'baseSetData': ['identity'],
    'baseSlice': [],
    'baseSome': ['baseEach'],
    'baseSortBy': [],
    'baseSortByOrder': ['arrayMap', 'baseMap', 'baseSortBy', 'compareMultiple', 'getCallback'],
    'baseSum': ['baseEach'],
    'baseToString': [],
    'baseUniq': ['cacheIndexOf', 'createCache', 'getIndexOf'],
    'baseValues': [],
    'baseWhile': ['baseSlice'],
    'baseWrapperValue': ['LazyWrapper'],
    'binaryIndex': ['binaryIndexBy', 'identity'],
    'binaryIndexBy': [],
    'bindCallback': ['identity'],
    'bufferClone': ['constant', 'isNative'],
    'charAtCallback': [],
    'charsLeftIndex': [],
    'charsRightIndex': [],
    'compareAscending': ['baseCompareAscending'],
    'compareMultiple': ['baseCompareAscending'],
    'composeArgs': [],
    'composeArgsRight': [],
    'createAggregator': ['baseEach', 'getCallback', 'isArray'],
    'createAssigner': ['bindCallback', 'isIterateeCall', 'restParam'],
    'createBaseEach': ['getLength', 'isLength', 'toObject'],
    'createBaseFor': ['toObject'],
    'createBindWrapper': ['createCtorWrapper'],
    'createFlow': ['getData', 'getFuncName', 'isArray', 'isLaziable', 'LodashWrapper'],
    'createCompounder': ['deburr', 'words'],
    'createCtorWrapper': ['baseCreate', 'isObject'],
    'createCurry': ['createWrapper', 'isIterateeCall', 'lodash'],
    'createExtremum': ['baseCallback', 'charAtCallback', 'extremumBy', 'getCallback', 'isArray', 'isIterateeCall', 'isString', 'toIterable'],
    'createFind': ['baseFind', 'baseFindIndex', 'getCallback', 'isArray'],
    'createFindIndex': ['baseFindIndex', 'getCallback'],
    'createFindKey': ['baseFind', 'getCallback'],
    'createForEach': ['bindCallback', 'isArray'],
    'createForIn': ['bindCallback', 'keysIn'],
    'createForOwn': ['bindCallback'],
    'createHybridWrapper': ['arrayCopy', 'composeArgs', 'composeArgsRight', 'createCtorWrapper', 'isLaziable', 'reorder', 'replaceHolders', 'setData'],
    'createObjectMapper': ['baseForOwn', 'getCallback'],
    'createPadding': ['repeat'],
    'createPadDir': ['baseToString', 'createPadding'],
    'createPartial': ['createWrapper', 'lodash', 'restParam', 'replaceHolders'],
    'createPartialWrapper': ['createCtorWrapper'],
    'createReduce': ['baseReduce', 'getCallback', 'isArray'],
    'createSortedIndex': ['baseCallback', 'binaryIndex', 'binaryIndexBy', 'getCallback'],
    'createWrapper': ['baseSetData', 'createBindWrapper', 'createHybridWrapper', 'createPartialWrapper', 'getData', 'mergeData', 'setData'],
    'deburrLetter': [],
    'escapeHtmlChar': [],
    'escapeStringChar': [],
    'equalArrays': [],
    'equalByTag': [],
    'equalObjects': ['keys'],
    'extremumBy': ['baseEach'],
    'getCallback': ['baseCallback', 'callback'],
    'getData': ['noop'],
    'getFuncName': ['baseProperty', 'constant'],
    'getIndexOf': ['baseIndexOf', 'indexOf'],
    'getLength': ['baseProperty'],
    'getSymbols': ['constant', 'isNative', 'toObject'],
    'getView': [],
    'indexOfNaN': [],
    'initCloneArray': [],
    'initCloneByTag': ['bufferClone'],
    'initCloneObject': [],
    'invokePath': ['baseGet', 'baseSlice', 'isKey', 'last', 'toPath'],
    'isArrayLike': ['getLength', 'isLength'],
    'isHostObject': [],
    'isIndex': [],
    'isIterateeCall': ['isIndex', 'isArrayLike', 'isObject'],
    'isKey': ['isArray', 'toObject'],
    'isLaziable': ['getFuncName', 'LazyWrapper', 'lodash'],
    'isLength': [],
    'isObjectLike': [],
    'isSpace': [],
    'isStrictComparable': ['isObject'],
    'mergeData': ['arrayCopy', 'composeArgs', 'composeArgsRight', 'replaceHolders'],
    'pickByArray': ['toObject'],
    'pickByCallback': ['baseForIn'],
    'reorder': ['arrayCopy', 'isIndex'],
    'replaceHolders': [],
    'setData': ['baseSetData', 'now'],
    'shimIsPlainObject': ['baseForIn', 'isArguments', 'isHostObject', 'isObjectLike'],
    'shimKeys': ['isArguments', 'isArray', 'isIndex', 'isLength', 'isString', 'keysIn'],
    'sortedUniq': [],
    'toIterable': ['isArrayLike', 'isObject', 'isString', 'values'],
    'toObject': ['isObject', 'isString'],
    'toPath': ['baseToString', 'isArray'],
    'trimmedLeftIndex': ['isSpace'],
    'trimmedRightIndex': ['isSpace'],
    'unescapeHtmlChar': []
  }),

  /* Used to hoist nested dependencies per identifier. */
  'hoist': createMap({
    'countBy': ['keys'],
    'dropRightWhile': ['isArray'],
    'dropWhile': ['isArray'],
    'every': ['keys'],
    'filter': ['keys'],
    'find': ['keys'],
    'findIndex': ['isArray'],
    'findLast': ['keys'],
    'findLastIndex': ['isArray'],
    'groupBy': ['keys'],
    'indexBy': ['keys'],
    'map': ['keys'],
    'max': ['keys'],
    'merge': ['isNative', 'keysIn'],
    'min': ['keys'],
    'partition': ['keys'],
    'reduce': ['keys'],
    'reduceRight': ['keys'],
    'reject': ['keys'],
    'some': ['keys'],
    'sortBy': ['isArray', 'keys'],
    'sortByAll': ['baseEach', 'isArguments', 'isArray'],
    'sortByOrder': ['baseEach'],
    'sortedIndex': ['isArray'],
    'sortedLastIndex': ['isArray'],
    'sum': ['keys'],
    'takeRightWhile': ['isArray'],
    'takeWhile': ['isArray'],
    'template': ['baseToString', 'escape'],
    'uniq': ['isArray', 'isNative']
  }),

  /** Used to track lodash object dependencies of identifiers. */
  'objDep': createMap({
    'getFuncName': ['realNames', 'support'],
    'has': ['support'],
    'isArguments': ['support'],
    'isElement': ['support'],
    'isPlainObject': ['support'],
    'keys': ['support'],
    'keysIn': ['support'],
    'main': ['realNames', 'support'],
    'shimIsPlainObject': ['support'],
    'shimKeys': ['support'],
    'template': ['templateSettings'],
    'toArray': ['support'],
    'toIterable': ['support'],
    'toObject': ['support']
  }),

  /** Used to map old categories to current ones. */
  'oldCategory': createMap({
    'Arrays': 'Array',
    'Chaining': 'Chain',
    'Collections': 'Collection',
    'Functions': 'Function',
    'Objects': 'Object',
    'Utilities': 'Utility'
  }),

  /** Used to map real names to their aliases. */
  'realToAlias': createMap({
    'assign': ['extend'],
    'callback': ['iteratee'],
    'every': ['all'],
    'filter': ['select'],
    'find': ['detect'],
    'first': ['head'],
    'flowRight': ['backflow', 'compose'],
    'forEach': ['each'],
    'forEachRight': ['eachRight'],
    'functions': ['methods'],
    'includes': ['contains', 'include'],
    'map': ['collect'],
    'reduce': ['foldl', 'inject'],
    'reduceRight': ['foldr'],
    'rest': ['tail'],
    'some': ['any'],
    'uniq': ['unique'],
    'wrapperCommit': ['commit'],
    'wrapperPlant': ['plant'],
    'wrapperReverse': ['reverse'],
    'wrapperToString': ['toString'],
    'wrapperValue': ['run', 'toJSON', 'value', 'valueOf'],
    'zipObject': ['object']
  }),

  /** Used to track variable dependencies of identifiers. */
  'varDep': createMap({
    'after': ['root'],
    'baseCreate': ['root'],
    'baseSetData': ['metaMap'],
    'bufferClone': ['root'],
    'createBindWrapper': ['root'],
    'createCache': ['root'],
    'createHybridWrapper': ['root'],
    'createPadding': ['root'],
    'createPartialWrapper': ['root'],
    'getData': ['metaMap'],
    'initCloneByTag': ['root'],
    'isFinite': ['root'],
    'isFunction': ['root'],
    'metaMap': ['root'],
    'pad': ['root'],
    'parseInt': ['root'],
    'repeat': ['root'],
    'SetCache': ['root'],
    'support': ['root'],
    'template': ['reInterpolate'],
    'templateSettings': ['reEscape', 'reEvaluate', 'reInterpolate'],
    'times': ['root']
  })
};
