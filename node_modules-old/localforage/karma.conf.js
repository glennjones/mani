/*jshint node:true */
module.exports = function(config) {
    var BROWSERS = ['PhantomJS'];

    var buildLabel;
    if (process.env.TRAVIS_BUILD_NUMBER && process.env.TRAVIS_BUILD_ID) {
        buildLabel = 'Travis #' + process.env.TRAVIS_BUILD_NUMBER +
                         ' (' + process.env.TRAVIS_BUILD_ID + ')';
    } else {
        buildLabel = 'Local Build ' + new Date().toLocaleString();
    }

    config.set({
        // base path, that will be used to resolve files and exclude
        basePath: '.',
 
        // frameworks to use
        frameworks: ['mocha'],
 
        // list of files / patterns to load in the browser
        files: [
            'bower_components/modernizr/assert.js',
            'bower_components/expect/index.js',
            'bower_components/modernizr/modernizr.js',
            'dist/localforage.js',

            'test/test.api.js',
            'test/test.config.js',
            'test/test.datatypes.js',
            'test/test.drivers.js'
        ],
 
        // list of files to exclude
        exclude: [
        ],

        // test results reporter to use
        reporters: ['progress'],

        // web server port
        port: 9876,
 
        // enable / disable colors in the output (reporters and logs)
        colors: true,
 
        // level of logging
        logLevel: config.LOG_DEBUG,
 
        // enable / disable watching file and executing tests whenever
        // any file changes
        autoWatch: false,
 
        // Start these browsers
        browsers: BROWSERS,
 
        // If browser does not capture in given timeout [ms], kill it
        captureTimeout: 0,
 
        startConnect: true, // process.env.TRAVIS_BUILD_NUMBER ? true : false,

        // Continuous Integration mode
        // if true, it capture browsers, run tests and exit
        singleRun: false,

        // sauceLabs: {
        //     build: buildLabel,
        //     testName: 'localForage Unit Tests',
        //     // tunnelIdentifier: process.env.TRAVIS_JOB_NUMBER || null
        // },
        // customLaunchers: SAUCELAB_BROWSERS,

        // reporters: ['progress', 'saucelabs']
    });
};
